; Сегмент данных
.data
  input db 100 dup(0) ; Буфер для ввода строки
  len db 0 ; Длина вводимой строки
  prompt db "Введите строку: ", "$" ; Поясняющий текст
  result db "Результат: ", "$" ; Текст перед выводом результата

; Сегмент кода
.code
  main proc
    mov ax, @data ; Установить сегмент данных
    mov ds, ax

    ; Вывести поясняющий текст
    mov ah, 09h ; Функция DOS для вывода строки
    mov dx, offset prompt ; Адрес строки в dx
    int 21h ; Вызвать DOS

    ; Ввести строку с клавиатуры
    mov ah, 0Ah ; Функция DOS для ввода строки
    mov dx, offset input ; Адрес буфера в dx
    int 21h ; Вызвать DOS

    ; Получить длину введенной строки
    mov al, input[1] ; AL = количество символов в буфере
    mov len, al ; Сохранить длину в переменной len

    ; Преобразовать строку в соответствии с вариантом
    call transform

    ; Вывести результат на экран
    mov ah, 09h ; Функция DOS для вывода строки
    mov dx, offset result ; Адрес строки в dx
    int 21h ; Вызвать DOS

    mov ah, 09h ; Функция DOS для вывода строки
    mov dx, offset input + 2 ; Адрес преобразованной строки в dx
    int 21h ; Вызвать DOS

    ; Дождаться нажатия клавиши
    mov ah, 00h ; Функция DOS для чтения символа с клавиатуры
    int 16h ; Вызвать BIOS

    ; Завершить программу
    mov ah, 4Ch ; Функция DOS для завершения программы
    int 21h ; Вызвать DOS

  main endp

; Процедура для преобразования строки по варианту S3 <-> S9, S2 <- S4 - (S5 - S6)
transform proc
  push bx ; Сохранить значение bx на стеке

  ; Поменять местами S3 и S9 (обращение к памяти по базе и смещению)
  mov bx, offset input + 2 ; BX = адрес начала строки
  xchg [bx + 2], [bx + 8] ; Поменять местами байты по адресам [BX + 2] и [BX + 8]

  ; В S2 записать значение S4 - (S5 - S6) (обращение к памяти по индексу и смещению)
  mov bx, offset input + 2 ; BX = адрес начала строки
  mov al, [bx + SI] ; AL = S4 (SI = индекс i-го символа)
  sub al, [bx + SI + 1] ; AL = AL - S5 (SI + 1 = индекс (i+1)-го символа)
  add al, [bx + SI + 2] ; AL = AL + S6 (SI + 2 = индекс (i+2)-го символа)
  mov [bx + SI - 2], al ; S2 = AL (SI - 2 = индекс (i-2)-го символа)

  pop bx ; Восстановить значение bx из стека

transform endp

end main 